version: '3.9'
services:
  postgres:
    container_name: postgres-app
    hostname: postgres-app
    image: postgres:alpine
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_NAME=${POSTGRES_NAME}
    restart: unless-stopped
    networks:
      - connection

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - EXPOSE_PORT=${APP_PORT}

    env_file:
      - .env
    restart: unless-stopped
    ports:
      - ${APP_PORT}:3000
    depends_on:
      - postgres
    networks:
      - connection

  prometheus:
    image: prom/prometheus:v2.40.4
    container_name: prome-larissa
    ports:
      - 9090:9090
    volumes:
      - ./infrastructure/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - connection
    depends_on:
      - app

  loki:
    image: grafana/loki:latest
    container_name: loki-larissa
    hostname: loki
    ports:
      - 3100:3100
    volumes:
      - ./infrastructure/loki.yml:/etc/loki/local-config.yml
    command: -config.file=/etc/loki/local-config.yml
    networks:
      - connection

  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASS}
    volumes:
      - ./infrastructure/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana
    networks:
      - connection
    depends_on:
      - prometheus

volumes:
  grafana:

networks:
  connection:
    driver: bridge